{
  "name": "dash",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/dash/src",
  "projectType": "application",
  "targets": {
    "updateversion": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "echo Updating version for PSNextDash...",
          "cp ./.env.template ./packages/dash/.env.local",
          "echo NX_APP_NAME=PSNextDash >> ./packages/dash/.env.local",
          "cat ./packages/dash/.env.local"
        ],
        "parallel": false,
        "forwardAllArgs": false
      }
    },
    "build": {
      "executor": "@nrwl/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "compiler": "swc",
        "outputPath": "dist/packages/dash",
        "index": "packages/dash/src/index.html",
        "baseHref": "/",
        "main": "packages/dash/src/main.tsx",
        "polyfills": "packages/dash/src/polyfills.ts",
        "tsConfig": "packages/dash/tsconfig.app.json",
        "assets": ["packages/dash/src/favicon.ico", "packages/dash/src/assets"],
        "styles": ["packages/dash/src/styles.scss"],
        "scripts": [],
        "webpackConfig": "packages/dash/webpack.config.js",
        "isolatedConfig": true
      },
      "configurations": {
        "development": {
          "extractLicenses": false,
          "optimization": false,
          "sourceMap": true,
          "vendorChunk": true
        },
        "production": {
          "fileReplacements": [
            {
              "replace": "packages/dash/src/environments/environment.ts",
              "with": "packages/dash/src/environments/environment.prod.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "extractLicenses": true,
          "vendorChunk": false
        }
      }
    },
    "serve": {
      "executor": "@nrwl/webpack:dev-server",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "dash:build",
        "hmr": true
      },
      "configurations": {
        "development": {
          "buildTarget": "dash:build:development"
        },
        "production": {
          "buildTarget": "dash:build:production",
          "hmr": false
        }
      }
    },
    "build-docker": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "docker build -f packages/dash/Dockerfile -t psnextv2_dash .",
            "forwardAllArgs": false
          },
          "docker tag psnextv2_dash {args.registry}/psnextv2-dash-{args.branch}:{args.sha}",
          "docker tag psnextv2_dash {args.registry}/psnextv2-dash-{args.branch}:latest",
          "docker push {args.registry}/psnextv2-dash-{args.branch}:{args.sha}",
          "docker push {args.registry}/psnextv2-dash-{args.branch}:latest"
        ],
        "parallel": false,
        "forwardAllArgs": false
      }
    },
    "build-k8s-manifests": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "find ./packages/dash/k8s -name kustomization.yaml -type f -exec sed -i 's/BRANCH/{args.branch}/g' {} \\;",
          "find ./packages/dash/k8s -name kustomization.yaml -type f -exec sed -i 's/PROJECTID/{args.projectid}/g' {} \\;",
          "find ./packages/dash/k8s -name kustomization.yaml -type f -exec sed -i 's/REGISTRY/{args.registry}/g' {} \\;",
          "find ./packages/dash/k8s -name kustomization.yaml -type f -exec sed -i 's/TAG/{args.sha}/g' {} \\;",
          {
            "command": "cp -r ./packages/dash/k8s/ ./manifests/dash/",
            "forwardAllArgs": false
          },
          {
            "command": "kubectl kustomize ./manifests/dash/k8s",
            "forwardAllArgs": false
          }
        ],
        "parallel": false,
        "forwardAllArgs": false
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["packages/dash/**/*.{ts,tsx,js,jsx}"]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/packages/dash"],
      "options": {
        "jestConfig": "packages/dash/jest.config.ts",
        "passWithNoTests": true
      }
    }
  },
  "tags": []
}
