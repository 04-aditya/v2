# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  envName: psnextv2
  vmImageName: ubuntu-latest
  containerRegistry: rravuri
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Cache@2
      displayName: Cache 'node_modules' folder
      inputs:
        key: 'packagecache'
        path: 'node_modules'
    - task: Cache@2
      displayName: Cache 'dist' folder
      inputs:
        key: 'distcache'
        path: 'dist'
    - task: NodeTool@0
      displayName: 'Ensure node 18.x'
      inputs:
        versionSpec: '18.x'
    - script: |
        npm i -g nx
        npm i --legacy-peer-deps
      displayName: 'install modules'
    - script: |
        nx run api:build
    - task: Docker@2
      displayName: Login to DockerHub
      inputs:
        command: login
        containerRegistry: 'rrdockerconn'
    - task: Bash@3
      displayName: 'build and push images'
      inputs:
        targetType: 'inline'
        script: |
          nx run api:build-docker --args="--registry=$(containerRegistry) --projectid=psnextv2 --branch=$(Build.SourceBranchName) --sha=$(Build.SourceVersion)"
    # - task: Bash@3
    #   displayName: 'build images'
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       nx run api:build-docker
#     - task: Kubernetes@1
#       inputs:
#         connectionType: 'Kubernetes Service Connection'
#         kubernetesServiceEndpoint: 'psnextv2-psdppsnextaksdev-main-1659074506341'
#         namespace: 'main'
#         command: 'get'
#         arguments: 'pods'
#         secretType: 'dockerRegistry'
#         containerRegistryType: 'Container Registry'
#         dockerRegistryEndpoint: 'rrdockerconn'
#         secretName: 'dockersecrets'
# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy job
#     pool:
#       vmImage: $(vmImageName)
#     environment: 'psnextv2.main' #customize with your environment
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - script: |
#               kubectl get services -n $(Build.SourceBranchName)
# - script: |
#     pwd
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
