# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  envName: psnextv2
  vmImageName: ubuntu-latest
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      displayName: 'build apps'
      inputs:
        versionSpec: '18.x'
    - script: |
        npm i -g nx
        npm i --legacy-peer-deps
      displayName: 'install modules'
    - script: |
        nx run api:build
    - task: Cache@2
      inputs:
        key: 'buildcache'
        path: 'node_modules'
    - task: Bash@3
      displayName: 'build images'
      inputs:
        targetType: 'inline'
        script: |
          nx run api:build-docker

    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'psnextv2-psdppsnextaksdev-main-1659074506341'
        namespace: 'main'
        command: 'get'
        arguments: 'pods'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'rrdockerconn'
        secretName: 'dockersecrets'
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    environment: 'psnextv2.main' #customize with your environment
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              kubectl get services -n $(Build.SourceBranchName)
# - script: |
#     pwd
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'
